# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name ${DOMAIN};
    
    # Certbot challenge location
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    server_name ${DOMAIN};
    
    # SSL certificates
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
    
    # SSL security settings
    ssl_trusted_certificate /etc/letsencrypt/live/${DOMAIN}/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Rate limiting for auth endpoints
    location /auth/ {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://frontend:80;
        include /etc/nginx/proxy_params;
    }
    
    # Rate limiting for API endpoints  
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://frontend:80;
        include /etc/nginx/proxy_params;
    }
    
    # Main application
    location / {
        proxy_pass http://frontend:80;
        include /etc/nginx/proxy_params;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://frontend:80;
        include /etc/nginx/proxy_params;
    }
}